[analog]
# accelerometer device name for Nexus reads
accelerometer_devname = 'Myon Accelerometers'

[autoproc]
# leave this many frames margin when cropping trial
crop_margin = 10
# skip trials with these strings in Eclipse description/notes
eclipse_skip = ['unipedal', 'standing']
# Eclipse key to write (None or empty to disable Eclipse writing)
eclipse_write_key = 'DESCRIPTION'
# Eclipse strings to write for different processing conditions
enf_descriptions = {'automark_failure': 'automark failed', 'context_left': 'l', 'context_both': 'rl', 'gaps': 'gaps', 'short': 'short trial', 'ok': 'ok', 'context_none': 'no contact', 'context_right': 'r', 'label_failure': 'labelling failed'}
# range of gait 'forward' coordinate where to mark events (mm)
events_range = [-2000, 2000]
# fail autoproc on trials with gaps
fail_on_gaps = False
# foot length relative to ANK-HEE marker distance (for estimated foot length)
foot_relative_len = 3.75
# relative force threshold (of subject weight) for detecting contact
forceplate_contact_threshold = .05
# max force must exceed this (relative to subject weight)
forceplate_min_weight = .9
# do not check gaps or labeling for these markers
ignore_markers = []
# left foot markers
left_foot_markers = ['LHEE', 'LTOE', 'LANK']
# marker diameter (mm)
marker_diam = 14
# min acceptable trial duration (frames)
min_trial_duration = 100
# pipelines for model stage, e.g. plug-in gait
model_pipelines = ['Dynamic model']
# Nexus timeout for save, pipelines etc.
nexus_timeout = 600
# pipelines to run for tagged trials only, after all processing is done
postproc_pipelines = []
# preprocessing pipelines, should produce recon & label & filter
pre_pipelines = ['Preprocessing']
# right foor markers
right_foot_markers = ['RHEE', 'RTOE', 'RANK']
# start marking events on first forceplate contact
start_on_forceplate = False
# default threshold for foot strike (rel to maximum velocity)
strike_vel_threshold = .2
# default threshold for toeoff (rel to maximum velocity)
toeoff_vel_threshold = .45
# markers used for tracking the body position
track_markers = ['RASI', 'LASI']
# skip trials with these Eclipse types
type_skip = ['Static']
# use Eclipse forceplate info when autoprocessing
use_eclipse_fp_info = True
# fixed velocity thresholds for automarking
use_fp_vel_thresholds = True
# reset Eclipse forceplate info according to our detection
write_eclipse_fp_info = True

[eclipse]
# tags for representative trials
repr_tags = ['E1', 'T1']
# which Eclipse keys to search for tags
tag_keys = ['DESCRIPTION', 'NOTES']
# Eclipse tags for trials of interest
tags = ['E1', 'E2', 'E3', 'E4', 'T1', 'T2', 'T3', 'T4']
# additional tags for video trials (used by the web report)
video_tags = ['Toe standing', 'Unipedal right', 'Unipedal left']

[emg]
# Python dict of EMG channel names / descriptions
channel_labels = {'RGas': 'Gastrocnemius (R)', 'LGas': 'Gastrocnemius (L)', 'LHam': 'Medial hamstrings (L)', 'RSol': 'Soleus (R)', 'RGlut': 'Gluteus (R)', 'LVas': 'Vastus (L)', 'LGas': 'Gastrocnemius (L)', 'LRec': 'Rectus femoris (L)', 'RPer': 'Peroneus (R)', 'LSol': 'Soleus (L)', 'RTibA': 'Tibialis anterior (R)', 'RHam': 'Medial hamstrings (R)', 'RVas': 'Vastus (R)', 'LTibA': 'Tibialis anterior (L)', 'RRec': 'Rectus femoris (R)', 'LPer': 'Peroneus (L)', 'LGlut': 'Gluteus (L)'}
# EMG normal data, i.e. expected activation ranges for channels
channel_normaldata = {'RGas': [[16, 50]], 'LHam': [[0, 2], [92, 100]], 'RSol': [[10, 54]], 'RGlut': [[0, 42], [96, 100]], 'LVas': [[0, 24], [96, 100]], 'LGas': [[16, 50]], 'LRec': [[0, 14], [56, 100]], 'RPer': [[4, 54]], 'RVas': [[0, 24], [96, 100]], 'LSol': [[10, 54]], 'RTibA': [[0, 12], [56, 100]], 'RHam': [[0, 2], [92, 100]], 'LTibA': [[0, 12], [56, 100]], 'RRec': [[0, 14], [56, 100]], 'LPer': [[4, 54]], 'LGlut': [[0, 42], [96, 100]]}
# EMG device name for Nexus reads
devname = 'Myon'
# power line frequency, used for detecting artifacts
linefreq = 50
# max. rel interference, line versus broadband (dB)
max_interference = 12
# EMG passband (Hz)
passband = (20, 400)
# RMS window length (samples)
rms_win = 31

[general]
# allow starting multiple copies of gaitmenu
allow_multiple_menu_instances = False
# web browser for viewing web reports
browser_path = "C:/Program Files (x86)/Google/Chrome/Application/chrome.exe"
# descriptions for Nexus camera ids
camera_labels = {'59875835': 'Front camera', '64826554': 'Side camera', '2111290': 'Side camera', '2114528': 'Rear camera', '2114551': 'Front camera'}
# experimental automatic update when using git repo
git_autoupdate = False
# whether to report exceptions via GUI dialog when running command line scripts
gui_exceptions = True
# age specific normal data files, keyed with age range
normaldata_age = {(3,6): "Z:\PXD_files\muscle_length_3_6.xlsx", (7,12): "Z:\PXD_files\muscle_length_7_12.xlsx", (13,19): "Z:\PXD_files\muscle_length_13_19.xlsx"}
# list of normal data files, in .gcd or .xlsx formats. 'default' to use Vicon supplied normal data
normaldata_files = 'default'
# Vicon installation path
vicon_path = 'C:/Program Files (x86)/Vicon'
# options for video converter
videoconv_opts = ''
# path to web report video converter. 'default' to use included ffmpeg2theora
videoconv_path = 'default'

[layouts]
# CGM2 foot angles
cgm2_forefoot = [['ForeFootAnglesX', 'ForeFootAnglesZ', 'ForeFootAnglesY']]

# PiG lower body kinematics + CGM2 foot angles
cgm2_kinematics = [['PelvisAnglesX', 'PelvisAnglesY', 'PelvisAnglesZ'],
                   ['HipAnglesX', 'HipAnglesY', 'HipAnglesZ'],
                   ['KneeAnglesX', 'KneeAnglesY', 'KneeAnglesZ'],
                   ['AnkleAnglesX', 'FootProgressAnglesZ', 'AnkleAnglesZ'],
                   ['ForeFootAnglesX', 'ForeFootAnglesZ', 'ForeFootAnglesY']]

# PiG lower body kinematics + kinetics
lb_kin = [['PelvisAnglesX', 'PelvisAnglesY', 'PelvisAnglesZ'],
          ['HipAnglesX', 'HipAnglesY', 'HipAnglesZ'],
          ['KneeAnglesX', 'KneeAnglesY', 'KneeAnglesZ'],
          ['AnkleAnglesX', 'FootProgressAnglesZ', 'AnkleAnglesZ'],
          ['HipMomentX', 'HipMomentY', 'HipMomentZ'],
          ['HipPowerZ', 'KneeMomentX', 'KneeMomentY'],
          ['KneeMomentZ', 'KneePowerZ', 'AnkleMomentX'],
          [None, None, 'AnklePowerZ']]

# PiG lower body kinematics + kinetics, web report version              
lb_kin_web = [['HipAnglesY', 'HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
              ['HipMomentY', 'HipMomentX', 'KneeMomentX', 'AnkleMomentX'],
              [None, 'HipPowerZ', 'KneePowerZ', 'AnklePowerZ']]

# PiG lower body kinematics
lb_kinematics = [['PelvisAnglesX', 'PelvisAnglesY', 'PelvisAnglesZ'],
                 ['HipAnglesX', 'HipAnglesY', 'HipAnglesZ'],
                 ['KneeAnglesX', 'KneeAnglesY', 'KneeAnglesZ'],
                 ['AnkleAnglesX', 'FootProgressAnglesZ', 'AnkleAnglesZ']]

# kinematics + EMG left side
lb_kinematics_emg_l = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                       ['LHam', 'LRec', 'LTibA'],
                       ['LGlut', 'LVas', 'LPer'],
                       ['LRec', 'LHam', 'LGas'],
                       [None, 'LGlut', 'LSol'],
                       [None, 'LGas', None]]

# kinematics + EMG right side
lb_kinematics_emg_r = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                       ['RHam', 'RRec', 'RTibA'],
                       ['RGlut', 'RVas', 'RPer'],
                       ['RRec', 'RHam', 'RGas'],
                       [None, 'RGlut', 'RSol'],
                       [None, 'RGas', None]]

# PiG lower body kinetics
lb_kinetics = [['HipMomentX', 'HipMomentY', 'HipMomentZ'],
               ['HipPowerZ', 'KneeMomentX', 'KneeMomentY'],
               ['KneeMomentZ', 'KneePowerZ', 'AnkleMomentX'],
               [None, None, 'AnklePowerZ'],
               ['NormalisedGRFX', 'NormalisedGRFY', 'NormalisedGRFZ']]

# kinetics + EMG left side
lb_kinetics_emg_l = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                     ['LHam', 'LRec', 'LTibA'],
                     ['LGlut', 'LVas', 'LPer'],
                     ['LHipMomentX', 'LKneeMomentX', 'LAnkleMomentX'],
                     ['LRec', 'LHam', 'LGas'],
                     [None, 'LGlut', 'LSol'],
                     [None, 'LGas', None],
                     ['LHipPowerZ', 'LKneePowerZ', 'LAnklePowerZ']]

# kinetics + EMG right side
lb_kinetics_emg_r = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                     ['RHam', 'RRec', 'RTibA'],
                     ['RGlut', 'RVas', 'RPer'],
                     ['RHipMomentX', 'RKneeMomentX', 'RAnkleMomentX'],
                     ['RRec', 'RHam', 'RGas'],
                     [None, 'RGlut', 'RSol'],
                     [None, 'RGas', None],
                     ['RHipPowerZ', 'RKneePowerZ', 'RAnklePowerZ']]

# PiG lower body kinetics, web report version                            
lb_kinetics_web = [['HipMomentX', 'HipMomentY', 'HipMomentZ', 'HipPowerZ'],
                   ['KneeMomentX', 'KneeMomentY', 'KneeMomentZ', 'KneePowerZ'],
                   ['AnkleMomentX', 'AnkleMomentY', None, 'AnklePowerZ'],
                   ['NormalisedGRFX', 'NormalisedGRFY', 'NormalisedGRFZ']]

# layouts to include in gaitmenu selection box
menu_layouts = {'Kinetics-EMG left': 'lb_kinetics_emg_l',
                'Kinetics-EMG right': 'lb_kinetics_emg_r',
                'CGM2 lower body kinematics': 'cgm2_kinematics',
                'Oxford foot model': 'ofm',
                'PiG lower body kinematics': 'lb_kinematics',
                'PiG lower body kinetics': 'lb_kinetics',
                'PiG lower body kinematics+kinetics': 'lb_kin',
                'Muscle length': 'musclelen',
                'Standard EMG': 'std_emg'}

# muscle lengths
musclelen = [['PsoaLength', 'GracLength', 'ReFeLength'],
             ['BiFLLength', 'SeTeLength', 'SeMeLength'],
             ['MeGaLength', 'LaGaLength', 'SoleLength']]

musclelen_l = [['LPsoaLength', 'LGracLength', 'LReFeLength'],
               ['LBiFLLength', 'LSeTeLength', 'LSeMeLength'],
               ['LMeGaLength', 'LLaGaLength', 'LSoleLength']]

musclelen_r = [['RPsoaLength', 'RGracLength', 'RReFeLength'],
               ['RBiFLLength', 'RSeTeLength', 'RSeMeLength'],
               ['RMeGaLength', 'RLaGaLength', 'RSoleLength']]

# Oxford foot model
ofm = [['HFTBAX', 'HFTBAZ', 'HFTBAY'],
       ['FFHFAX', 'FFHFAZ', 'FFHFAY'],
       ['FFTBAX', 'FFTBAZ', 'FFTBAY'],
       ['HXFFAX', None, 'HXFFAY']]

# EMG left + right side
std_emg = [['LGlut', 'RGlut'],
           ['LHam', 'RHam'],
           ['LRec', 'RRec'],
           ['LVas', 'RVas'],
           ['LTibA', 'RTibA'],
           ['LPer', 'RPer'],
           ['LGas', 'RGas'],
           ['LSol', 'RSol']]


[plot]
# default plotting backend
backend = 'plotly'
# color cycle
colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']
# when indicating R/L by color
context_colors = {'R': '#7cfc00', 'L': '#ff0000'}
# when indicating R/L by line style
context_styles = {'R': '-', 'L': '--'}
# default EMG cycles to plot
default_emg_cycles = 'forceplate'
# default gait cycles to plot
default_model_cycles = 'forceplate'
# alpha value (transparency) for EMG traces
emg_alpha = 0.6
# line width for EMG plots
emg_linewidth = 1
# pre-plot multiplier for EMG; e.g. 1000 will plot EMG in millivolts
emg_multiplier = 1000.0
# alpha value (transparency) for EMG normal data
emg_normals_alpha = 0.1
# color value for EMG normal data
emg_normals_color = '#ff0000'
# line width for EMG RMS
emg_rms_linewidth = 1.5
# EMG units; should take into account the multiplier above
emg_ylabel = 'mV'
# fixed scale for EMG plots (volts)
emg_yscale = 0.0005
# plot line styles in order of preference
linestyles = ['-', '--', '..', '-.']
# alpha value (transparency) for model data
model_alpha = 0.6
# line width for model data
model_linewidth = 1.5
# alpha value (transparency) for model normal data
model_normals_alpha = 0.3
# color value for model normal data
model_normals_color = '#A0A0A0'
# alpha value (transparency) for model stddev data
model_stddev_alpha = 0.3
# colors for stddev data (context specific)
model_stddev_colors = {'R': '#7cfc00', 'L': '#ff0000'}

[plot_matplotlib]
# relative plot height for analog variables
analog_plotheight = 0.667
# figure inches per column
inch_per_col = 4.5
# figure inches per row
inch_per_row = 1.25
# font size for axis labels
label_fontsize = 8
# font size for legend
legend_fontsize = 8
# font size for main title
maintitle_fontsize = 9
# max figure height
maxh = 9.25
# max figure width
maxw = 20.0
# matplotlib style
mpl_style = 'seaborn'
# font size for axis ticks
ticks_fontsize = 8
# font size for subplot titles
subtitle_fontsize = 8

[plot_plotly]
# font size for axis labels
label_fontsize = 9
# font size for legend
legend_fontsize = 12
# font size for subplot titles
subtitle_fontsize = 13

[tardieu]
# accelerometer device names
acc_chs = []
# EMG channel names (without the preceding 'R' or 'L')
emg_chs = ['TibA', 'Per', 'Sol', 'Gas']
# markers that define the joint, in correct order (middle one is the 'hinge')
marker_names = ['Toe', 'Ankle', 'Knee']

[trial]
# use Eclipse forceplate info when loading trial
use_eclipse_fp_info = True

[web_report]
# maximum number of reports that may be open simultaneously
max_reports = 16
# where to start allocating tcp ports for reports
tcp_port = 50000
