[general]
# Nexus installation path
nexus_path = 'C:/Program Files (x86)/Vicon/Nexus2.6'
# list of normal data files, in .gcd or .xlsx formats
normaldata_files = ['Z:/PXD_files/normal.gcd']
# options for video player
videoplayer_opts = '--input-repeat=-1 --rate=.2'
# path to video player
videoplayer_path = 'C:/Program Files (x86)/VideoLAN/VLC/vlc.exe'

[emg]
# Python dict of EMG channel names / descriptions
channel_labels = {'RGas': 'Gastrocnemius (R)', 'LGas': 'Gastrocnemius (L)', 'LHam': 'Medial hamstrings (L)', 'RSol': 'Soleus (R)', 'RGlut': 'Gluteus (R)', 'LVas': 'Vastus (L)', 'LGas': 'Gastrocnemius (L)', 'LRec': 'Rectus femoris (L)', 'RPer': 'Peroneus (R)', 'LSol': 'Soleus (L)', 'RTibA': 'Tibialis anterior (R)', 'RHam': 'Medial hamstrings (R)', 'RVas': 'Vastus (R)', 'LTibA': 'Tibialis anterior (L)', 'RRec': 'Rectus femoris (R)', 'LPer': 'Peroneus (L)', 'LGlut': 'Gluteus (L)'}
# EMG normal data, i.e. expected activation ranges for channels
channel_normaldata = {'RGas': [[16, 50]], 'LHam': [[0, 2], [92, 100]], 'RSol': [[10, 54]], 'RGlut': [[0, 42], [96, 100]], 'LVas': [[0, 24], [96, 100]], 'LGas': [[16, 50]], 'LRec': [[0, 14], [56, 100]], 'RPer': [[4, 54]], 'RVas': [[0, 24], [96, 100]], 'LSol': [[10, 54]], 'RTibA': [[0, 12], [56, 100]], 'RHam': [[0, 2], [92, 100]], 'LTibA': [[0, 12], [56, 100]], 'RRec': [[0, 14], [56, 100]], 'LPer': [[4, 54]], 'LGlut': [[0, 42], [96, 100]]}
# EMG device name
devname = 'Myon'
# power line frequency, used for detecting artifacts
linefreq = 50
# EMG passband (Hz)
passband = (20, 400)
# RMS window length (samples)
rms_win = 31


[trial]
# use Eclipse forceplate info when loading trial
use_eclipse_fp_info = True


[plot]
# relative plot height for analog variables
analog_plotheight = 0.667
# default gait cycles to plot
default_model_cycles = 'forceplate'
default_emg_cycles = 'forceplate'
# alpha value (transparency) for EMG traces
emg_alpha = 0.6
emg_linewidth = 0.5
emg_rms_linewidth = 1.5
# pre-plot multiplier for EMG
emg_multiplier = 1000.0
# alpha and color for EMG normal data
emg_normals_alpha = 0.8
emg_normals_color = 'pink'
emg_tracecolor = 'black'
emg_ylabel = 'mV'
# fixed scale for EMG plots
emg_yscale = (-0.0005, 0.0005)
# this sets the total figure size in inches per row/column
inch_per_col = 4.5
inch_per_row = 1.25
label_fontsize = 8
legend_fontsize = 8
# limit height/width for figure size
maxh = 9.25
maxw = 20.0
maintitle_fontsize = 9
# for plotting model variables (e.g. Plug-in Gait)
model_linestyles = {'R': '-', 'L': '--'}
model_linewidth = 1.5
model_normals_alpha = 0.3
model_normals_color = 'gray'
model_tracecolors = {'R': 'lawngreen', 'L': 'red'}
# whether to show videos automatically (nexus_kinallplot.py)
show_videos = True
ticks_fontsize = 8
title_fontsize = 8
# how much space to reserve for plot title
titlespace = 0.75

[autoproc]
#  forceplate detection sideways tolerance for ankle marker (mm)
ankle_sideways_tol = 20
# automark max distance from walkway center
automark_max_dist = 2000
# maximum center of pressure shift (mm) for forceplace detection
cop_shift_max = 300
# leave this many frames margin when cropping trial
crop_margin = 10
# skip trials with these Eclipse descriptions
desc_skip = ['Unipedal right', 'Unipedal left', 'Toe standing']
# which Eclipse key to write - None or empty to disable Eclipse writing
eclipse_write_key = 'DESCRIPTION'
# Eclipse strings for different conditions
enf_descriptions = {'automark_failure': 'automark failed', 'gaps_or_short': 'gaps or short trial', 'context_left': 'v', 'context_both': 'ov', 'gaps': 'gaps', 'short': 'short trial', 'ok': 'ok', 'context_none': 'ei kontaktia', 'context_right': 'o', 'label_failure': 'labelling failed'}
# range of walkway 'forward' coordinate where to mark events (mm)
events_range = [-2500, 3000]
# relative force (of subj weight) for detecting contact
forceplate_contact_threshold = .2
# max force must exceed this (relative to subj weight)
forceplate_min_weight = .8
gaps_max = 10
gaps_min_dist = 50
# heel strike tol
heel_strike_tol = 50
min_trial_duration = 100
model_pipeline = 'Dynamic model + save (LEGACY)'
# Nexus timeout (s) for running pipelines
pipeline_timeout = 45
# preprocessing pipelines, should produce recon & label & filter
pre_pipelines = ['Reconstruct and label (legacy)', 'AutoGapFill_mod', 'filter']
# whether to reset region of interest before processing
reset_roi = True
# trial save timeout (s)
save_timeout = 100
# start marking events on first forceplate contact
start_on_forceplate = False
# markers for tracking the body position
track_markers = ['RASI', 'LASI']
right_foot_markers = ['RHEE', 'RTOE', 'RANK']
left_foot_markers = ['LHEE', 'LTOE', 'LANK']
# toeoff tolerance in forward direction
toeoff_marker_tol = 60
trial_open_timeout = 45
# skip trials with this Eclipse type
type_skip = ['Static']
# use Eclipse forceplate info when autoprocessing
use_eclipse_fp_info = True
# location of walkway center
walkway_ctr = [0, 300, 0]

[layouts]

# PiG lower body kinematics
lb_kinematics = [['PelvisAnglesX', 'PelvisAnglesY', 'PelvisAnglesZ'],
                  ['HipAnglesX', 'HipAnglesY', 'HipAnglesZ'],
                  ['KneeAnglesX', 'KneeAnglesY', 'KneeAnglesZ'],
                  ['AnkleAnglesX', 'FootProgressAnglesZ', 'AnkleAnglesZ']]

# PiG lower body kinetics
lb_kinetics = [['HipMomentX', 'HipMomentY', 'HipMomentZ'],
                ['HipPowerZ', 'KneeMomentX', 'KneeMomentY'],
                ['KneeMomentZ', 'KneePowerZ', 'AnkleMomentX'],
                [None, None, 'AnklePowerZ']]

# PiG lower body kinematics + kinetics
lb_kin = [['PelvisAnglesX', 'PelvisAnglesY', 'PelvisAnglesZ'],
              ['HipAnglesX', 'HipAnglesY', 'HipAnglesZ'],
              ['KneeAnglesX', 'KneeAnglesY', 'KneeAnglesZ'],
              ['AnkleAnglesX', 'FootProgressAnglesZ', 'AnkleAnglesZ'],
              ['HipMomentX', 'HipMomentY', 'HipMomentZ'],
              ['HipPowerZ', 'KneeMomentX', 'KneeMomentY'],
              ['KneeMomentZ', 'KneePowerZ', 'AnkleMomentX'],
              [None, None, 'AnklePowerZ']]

# overlay plot (with legend)
overlay_lb_kin = [['PelvisAnglesX', 'PelvisAnglesY', 'PelvisAnglesZ'],
                  ['HipAnglesX', 'HipAnglesY', 'HipAnglesZ'],
                  ['KneeAnglesX', 'KneeAnglesY', 'KneeAnglesZ'],
                  ['AnkleAnglesX', 'FootProgressAnglesZ', 'AnkleAnglesZ'],
                  ['HipMomentX', 'HipMomentY', 'HipMomentZ'],
                  ['HipPowerZ', 'KneeMomentX', 'KneeMomentY'],
                  ['KneeMomentZ', 'KneePowerZ', 'AnkleMomentX'],
                  ['model_legend', None, 'AnklePowerZ']]

# muscle lengths
musclelen = [['PsoaLength', 'GracLength', 'ReFeLength'],
                 ['BiFLLength', 'SeTeLength', 'SeMeLength'],
                 ['MeGaLength', 'LaGaLength', 'SoleLength']]

# EMG left + right side
std_emg = [['LGlut', 'RGlut'],
           ['LHam', 'RHam'],
           ['LRec', 'RRec'],
           ['LVas', 'RVas'],
           ['LTibA', 'RTibA'],
           ['LPer', 'RPer'],
           ['LGas', 'RGas'],
           ['LSol', 'RSol']]

# EMG left + right side overlay
overlay_std_emg = [['LGlut', 'RGlut'],
               ['LHam', 'RHam'],
               ['LRec', 'RRec'],
               ['LVas', 'RVas'],
               ['LTibA', 'RTibA'],
               ['LPer', 'RPer'],
               ['LGas', 'RGas'],
               ['LSol', 'RSol'],
               ['emg_legend', None]]

# kinetics + EMG left side
lb_kinetics_emg_l = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                  ['LHam', 'LRec', 'LTibA'],
                  ['LGlut', 'LVas', 'LPer'],
                  ['LHipMomentX', 'LKneeMomentX', 'LAnkleMomentX'],
                  ['LRec', 'LHam', 'LGas'],
                  [None, 'LGlut', 'LSol'],
                  [None, 'LGas', None],
                  ['LHipPowerZ', 'LKneePowerZ', 'LAnklePowerZ']]

# kinetics + EMG right side
lb_kinetics_emg_r = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                  ['RHam', 'RRec', 'RTibA'],
                  ['RGlut', 'RVas', 'RPer'],
                  ['RHipMomentX', 'RKneeMomentX', 'RAnkleMomentX'],
                  ['RRec', 'RHam', 'RGas'],
                  [None, 'RGlut', 'RSol'],
                  [None, 'RGas', None],
                  ['RHipPowerZ', 'RKneePowerZ', 'RAnklePowerZ']]

# kinematics + EMG left side
lb_kinematics_emg_l = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                    ['LHam', 'LRec', 'LTibA'],
                    ['LGlut', 'LVas', 'LPer'],
                    ['LRec', 'LHam', 'LGas'],
                    [None, 'LGlut', 'LSol'],
                    [None, 'LGas', None]]

# kinematics + EMG right side
lb_kinematics_emg_r = [['HipAnglesX', 'KneeAnglesX', 'AnkleAnglesX'],
                   ['RHam', 'RRec', 'RTibA'],
                   ['RGlut', 'RVas', 'RPer'],
                   ['RRec', 'RHam', 'RGas'],
                   [None, 'RGlut', 'RSol'],
                   [None, 'RGas', None]]


[tardieu]
emg_chs = ['_Gastr', '_Sol', '_TibAnt']

















